/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually
 * edited  */
/* The following lines can be configured to regenerate this file during cmake */
/* If manual edits are made, the following tags should be modified accordingly.
 */
/* BINDTOOL_GEN_AUTOMATIC(0) */
/* BINDTOOL_USE_PYGCCXML(0) */
/* BINDTOOL_HEADER_FILE(gnmax_source_cc.h) */
/* BINDTOOL_HEADER_FILE_HASH(00f5c3bd0fa4ab70b6650f51d3889661) */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/gnMAX2769/gnmax_source_cc.h>
// pydoc.h is automatically generated in the build directory
#include <gnmax_source_cc_pydoc.h>

void bind_gnmax_source_cc(py::module &m) {

  using gnmax_source_cc = ::gr::gnMAX2769::gnmax_source_cc;

  py::class_<gnmax_source_cc, gr::sync_block, gr::block, gr::basic_block,
             std::shared_ptr<gnmax_source_cc>>(m, "gnmax_source_cc",
                                               D(gnmax_source_cc))

      .def(py::init(&gnmax_source_cc::make), py::arg("bias"), py::arg("ant"),
           py::arg("freq"), py::arg("bw"), py::arg("zeroif"),
           D(gnmax_source_cc, make))

      .def("bias", &gnmax_source_cc::bias, D(gnmax_source_cc, bias))

      .def("set_bias", &gnmax_source_cc::set_bias, py::arg("bias"),
           D(gnmax_source_cc, set_bias))

      .def("ant", &gnmax_source_cc::ant, D(gnmax_source_cc, ant))

      .def("set_ant", &gnmax_source_cc::set_ant, py::arg("ant"),
           D(gnmax_source_cc, set_ant))

      .def("freq", &gnmax_source_cc::freq, D(gnmax_source_cc, freq))

      .def("set_freq", &gnmax_source_cc::set_freq, py::arg("freq"),
           D(gnmax_source_cc, set_freq))

      .def("bw", &gnmax_source_cc::bw, D(gnmax_source_cc, bw))

      .def("set_bw", &gnmax_source_cc::set_bw, py::arg("bw"),
           D(gnmax_source_cc, set_bw))

      ;
}
